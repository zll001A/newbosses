package com.shsxt.newbosses.web;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.shsxt.newbosses.service.UserService;
import com.shsxt.newbosses.po.New_User;
import com.shsxt.newbosses.po.vo.ResultInfo;

@WebServlet("/userServlet")
public class userServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	private UserService userService = new UserService();

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 得到用户行为
		String actionName = request.getParameter("actionName");
		
		// 判断用户行为，调用不同的方法
		if ("login".equals(actionName)) {
			// 用户登录
			userLogin(request, response);
			
		}
	}

	private void userLogin(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		// 1、接收参数
		String userName = request.getParameter("uname");
		String userPwd = request.getParameter("upwd");
		
		// 2、调用Service层的方法，得到返回的resultInfo对象
		ResultInfo<New_User> resultInfo = userService.userLogin(userName, userPwd);
		
		// 3、判断resultInfo中返回的饿code值
		if  (resultInfo.getCode() == 1) { // 如果code是1，表示登录成功
			// 1、判断用户是否选择记住密码，如果是，则存cookie对象
			String rem = request.getParameter("rem");
			// 如果值为1，表示选择记住密码
			if ("1".equals(rem)) {
				// 存cookie对象
				Cookie cookie = new Cookie("user",userName+"-"+userPwd);
				cookie.setMaxAge(3 * 24 * 60 * 60);// 设置失效时间
				response.addCookie(cookie); // 响应cookie对象
			}
			// 2、将用户对象存到session域对象中
			request.getSession().setAttribute("user", resultInfo.getResult());
			// 3、重定向首页
			response.sendRedirect("index.jsp");
			
		} else { // 如果code是0，表示登录失败
			
			// 1、将resultInfo对象存到request作用域中
			request.setAttribute("resultInfo", resultInfo);
			//  2、请求转发跳转到登录页面
			request.getRequestDispatcher("login.jsp").forward(request, response);
		}
	}

}
